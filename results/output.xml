<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2 (Python 3.11.5 on win32)" generated="2025-02-13T13:35:59.403453" rpa="false" schemaversion="5">
<suite id="s1" name="LoginScenarios" source="D:\robot_framework_api_cicd\LoginScenarios.robot">
<test id="s1-t1" name="Cenário 01: Fazer login com sucesso" line="5">
<kw name="Dado que a URL está disponível está disponível" owner="LoginBDD">
<kw name="Carrega URL" owner="LoginSteps">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-13T13:36:00.954730" level="INFO">Creating Session using : alias=my_session, url=https://my-public-api-for-tests-production.up.railway.app, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>my_session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-13T13:36:00.954730" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-02-13T13:36:00.953755" elapsed="0.001972"/>
</kw>
<status status="PASS" start="2025-02-13T13:36:00.953755" elapsed="0.001972"/>
</kw>
<kw name="Quando envio a requisição POST para o endpoint &quot;/api/login&quot; com body jsonSchemas/login/post/request.json" owner="LoginBDD" source_name="Quando envio a requisição ${METODO} para o endpoint &quot;${ENDPOINT}&quot; com body ${JSON_FILE}">
<kw name="Envia requisição" owner="LoginSteps">
<if>
<branch type="IF" condition="'${METODO}' == 'GET'">
<kw name="GET On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>my_session</arg>
<arg>${ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-02-13T13:36:00.957721" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-02-13T13:36:00.956724" elapsed="0.000997"/>
</branch>
<branch type="ELSE IF" condition="'${METODO}' == 'POST'">
<if>
<branch type="IF" condition="'${ENDPOINT}' == '/api/login'">
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2025-02-13T13:36:00.958719" level="INFO">${body} = {'username': 'admin', 'password': '12345'}</msg>
<var>${body}</var>
<arg>${JSON_FILE}</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2025-02-13T13:36:00.957721" elapsed="0.000998"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-02-13T13:36:01.964518" level="INFO">POST Request : url=https://my-public-api-for-tests-production.up.railway.app/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '42', 'Content-Type': 'application/json'} 
 body=b'{"username": "admin", "password": "12345"}' 
 </msg>
<msg time="2025-02-13T13:36:01.964518" level="INFO">POST Response : url=https://my-public-api-for-tests-production.up.railway.app/api/login 
 status=200, reason=OK 
 headers={'Content-Length': '187', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Thu, 13 Feb 2025 16:36:00 GMT', 'Etag': 'W/"bb-HXLIkxkZKYxNB5thdpwDFbiE9Rg"', 'Server': 'railway-edge', 'X-Powered-By': 'Express', 'X-Railway-Request-Id': 'ZUeGhjRbSLyj1oHB6SYyxw_882434190'} 
 body={"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImlhdCI6MTczOTQ2NDU2MCwiZXhwIjoxNzM5NDY4MTYwfQ.3ugCeUE1Hndy44hqkRkVEoMpa620utPCMwhR4tigP6c"} 
 </msg>
<msg time="2025-02-13T13:36:01.964518" level="INFO">C:\Users\Pichau\AppData\Roaming\Python\Python311\site-packages\urllib3\connectionpool.py:1103: InsecureRequestWarning: Unverified HTTPS request is being made to host 'my-public-api-for-tests-production.up.railway.app'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-02-13T13:36:01.966394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>my_session</arg>
<arg>${ENDPOINT}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-13T13:36:00.960744" elapsed="1.005650"/>
</kw>
<status status="PASS" start="2025-02-13T13:36:00.957721" elapsed="1.012175"/>
</branch>
<status status="PASS" start="2025-02-13T13:36:00.957721" elapsed="1.012175"/>
</if>
<status status="PASS" start="2025-02-13T13:36:00.957721" elapsed="1.012175"/>
</branch>
<status status="PASS" start="2025-02-13T13:36:00.956724" elapsed="1.013172"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-02-13T13:36:01.970865" level="INFO">Resposta: {"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImlhdCI6MTczOTQ2NDU2MCwiZXhwIjoxNzM5NDY4MTYwfQ.3ugCeUE1Hndy44hqkRkVEoMpa620utPCMwhR4tigP6c"}</msg>
<arg>Resposta: ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-13T13:36:01.969896" elapsed="0.000969"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-02-13T13:36:01.973115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-02-13T13:36:01.973115" elapsed="0.000000"/>
</kw>
<arg>${METODO}</arg>
<arg>${ENDPOINT}</arg>
<arg>${JSON_FILE}</arg>
<status status="PASS" start="2025-02-13T13:36:00.956724" elapsed="1.018389"/>
</kw>
<status status="PASS" start="2025-02-13T13:36:00.956724" elapsed="1.018389"/>
</kw>
<kw name="Então o código de resposta deve ser 200" owner="LoginBDD" source_name="Então o código de resposta deve ser ${STATUS_CODE_ESPERADO}">
<kw name="Confere o status code" owner="LoginSteps">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-02-13T13:36:01.977130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>${STATUS_CODE_ESPERADO}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-02-13T13:36:01.976139" elapsed="0.000991"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-02-13T13:36:01.979104" level="INFO">Status Code Retornado: 200 -- Status Code Esperado: 200</msg>
<arg>Status Code Retornado: ${response.status_code} -- Status Code Esperado: ${STATUS_CODE_ESPERADO}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-13T13:36:01.978105" elapsed="0.000999"/>
</kw>
<arg>${STATUS_CODE_ESPERADO}</arg>
<status status="PASS" start="2025-02-13T13:36:01.976139" elapsed="0.004958"/>
</kw>
<status status="PASS" start="2025-02-13T13:36:01.976139" elapsed="0.004958"/>
</kw>
<kw name="E a estrutura de resposta deve estar de acordo com o arquivo jsonSchemas/login/post/response.json" owner="LoginBDD" source_name="E a estrutura de resposta deve estar de acordo com o arquivo ${SCHEMA_PATH}">
<kw name="Confere o contrato" owner="LoginSteps">
<kw name="Validate Jsonschema From File" owner="JsonValidator">
<arg>${response.json()}</arg>
<arg>${SCHEMA_PATH}</arg>
<doc>Validate JSON according to schema, loaded from a file.</doc>
<status status="PASS" start="2025-02-13T13:36:01.982095" elapsed="0.002992"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-02-13T13:36:01.986083" level="INFO">Schema Retornado: {'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImlhdCI6MTczOTQ2NDU2MCwiZXhwIjoxNzM5NDY4MTYwfQ.3ugCeUE1Hndy44hqkRkVEoMpa620utPCMwhR4tigP6c'}</msg>
<arg>Schema Retornado: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-13T13:36:01.986083" elapsed="0.000000"/>
</kw>
<arg>${SCHEMA_PATH}</arg>
<status status="PASS" start="2025-02-13T13:36:01.982095" elapsed="0.005337"/>
</kw>
<status status="PASS" start="2025-02-13T13:36:01.982095" elapsed="0.005337"/>
</kw>
<tag>Regressão</tag>
<status status="PASS" start="2025-02-13T13:36:00.952735" elapsed="1.035761"/>
</test>
<test id="s1-t2" name="Cenário 02: Tentar fazer login com senha errada" line="12">
<kw name="Dado que a URL está disponível está disponível" owner="LoginBDD">
<kw name="Carrega URL" owner="LoginSteps">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-13T13:36:01.992356" level="INFO">Creating Session using : alias=my_session, url=https://my-public-api-for-tests-production.up.railway.app, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>my_session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-13T13:36:01.991356" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2025-02-13T13:36:01.991356" elapsed="0.002994"/>
</kw>
<status status="PASS" start="2025-02-13T13:36:01.991356" elapsed="0.002994"/>
</kw>
<kw name="Quando envio a requisição POST para o endpoint &quot;/api/login&quot; com body jsonSchemas/login/post/request-senha-errada.json" owner="LoginBDD" source_name="Quando envio a requisição ${METODO} para o endpoint &quot;${ENDPOINT}&quot; com body ${JSON_FILE}">
<kw name="Envia requisição" owner="LoginSteps">
<if>
<branch type="IF" condition="'${METODO}' == 'GET'">
<kw name="GET On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>my_session</arg>
<arg>${ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-02-13T13:36:01.995376" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-02-13T13:36:01.995376" elapsed="0.000000"/>
</branch>
<branch type="ELSE IF" condition="'${METODO}' == 'POST'">
<if>
<branch type="IF" condition="'${ENDPOINT}' == '/api/login'">
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2025-02-13T13:36:01.997343" level="INFO">${body} = {'username': 'admin', 'password': '123456'}</msg>
<var>${body}</var>
<arg>${JSON_FILE}</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2025-02-13T13:36:01.996346" elapsed="0.000997"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-02-13T13:36:02.756034" level="INFO">POST Request : url=https://my-public-api-for-tests-production.up.railway.app/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '43', 'Content-Type': 'application/json'} 
 body=b'{"username": "admin", "password": "123456"}' 
 </msg>
<msg time="2025-02-13T13:36:02.756034" level="INFO">POST Response : url=https://my-public-api-for-tests-production.up.railway.app/api/login 
 status=401, reason=Unauthorized 
 headers={'Content-Length': '37', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Thu, 13 Feb 2025 16:36:01 GMT', 'Etag': 'W/"25-RkwPKr0iX0BqsLpo2HoNT6Xi/ws"', 'Server': 'railway-edge', 'X-Powered-By': 'Express', 'X-Railway-Request-Id': 'P0HSCTm2S_WJFRU1vjpbvQ_2074704348'} 
 body={"message":"Credenciais incorretas."} 
 </msg>
<msg time="2025-02-13T13:36:02.756034" level="INFO">C:\Users\Pichau\AppData\Roaming\Python\Python311\site-packages\urllib3\connectionpool.py:1103: InsecureRequestWarning: Unverified HTTPS request is being made to host 'my-public-api-for-tests-production.up.railway.app'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-02-13T13:36:02.757785" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>my_session</arg>
<arg>${ENDPOINT}</arg>
<arg>json=${body}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-13T13:36:01.998339" elapsed="0.759446"/>
</kw>
<status status="PASS" start="2025-02-13T13:36:01.995376" elapsed="0.765883"/>
</branch>
<status status="PASS" start="2025-02-13T13:36:01.995376" elapsed="0.765883"/>
</if>
<status status="PASS" start="2025-02-13T13:36:01.995376" elapsed="0.765883"/>
</branch>
<status status="PASS" start="2025-02-13T13:36:01.995376" elapsed="0.765883"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-02-13T13:36:02.762258" level="INFO">Resposta: {"message":"Credenciais incorretas."}</msg>
<arg>Resposta: ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-13T13:36:02.761259" elapsed="0.000999"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-02-13T13:36:02.763451" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-02-13T13:36:02.763451" elapsed="0.000000"/>
</kw>
<arg>${METODO}</arg>
<arg>${ENDPOINT}</arg>
<arg>${JSON_FILE}</arg>
<status status="PASS" start="2025-02-13T13:36:01.994350" elapsed="0.771097"/>
</kw>
<status status="PASS" start="2025-02-13T13:36:01.994350" elapsed="0.771097"/>
</kw>
<kw name="Então o código de resposta deve ser 401" owner="LoginBDD" source_name="Então o código de resposta deve ser ${STATUS_CODE_ESPERADO}">
<kw name="Confere o status code" owner="LoginSteps">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-02-13T13:36:02.766928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>${STATUS_CODE_ESPERADO}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-02-13T13:36:02.765929" elapsed="0.000999"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-02-13T13:36:02.768550" level="INFO">Status Code Retornado: 401 -- Status Code Esperado: 401</msg>
<arg>Status Code Retornado: ${response.status_code} -- Status Code Esperado: ${STATUS_CODE_ESPERADO}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-13T13:36:02.767551" elapsed="0.000999"/>
</kw>
<arg>${STATUS_CODE_ESPERADO}</arg>
<status status="PASS" start="2025-02-13T13:36:02.765929" elapsed="0.003079"/>
</kw>
<status status="PASS" start="2025-02-13T13:36:02.765929" elapsed="0.004106"/>
</kw>
<kw name="E a estrutura de resposta deve estar de acordo com o arquivo jsonSchemas/login/post/response-senha-errada.json" owner="LoginBDD" source_name="E a estrutura de resposta deve estar de acordo com o arquivo ${SCHEMA_PATH}">
<kw name="Confere o contrato" owner="LoginSteps">
<kw name="Validate Jsonschema From File" owner="JsonValidator">
<arg>${response.json()}</arg>
<arg>${SCHEMA_PATH}</arg>
<doc>Validate JSON according to schema, loaded from a file.</doc>
<status status="PASS" start="2025-02-13T13:36:02.770035" elapsed="0.002994"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-02-13T13:36:02.773029" level="INFO">Schema Retornado: {'message': 'Credenciais incorretas.'}</msg>
<arg>Schema Retornado: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-13T13:36:02.773029" elapsed="0.000000"/>
</kw>
<arg>${SCHEMA_PATH}</arg>
<status status="PASS" start="2025-02-13T13:36:02.770035" elapsed="0.004959"/>
</kw>
<status status="PASS" start="2025-02-13T13:36:02.770035" elapsed="0.004959"/>
</kw>
<tag>Regressão</tag>
<status status="PASS" start="2025-02-13T13:36:01.990494" elapsed="0.785501"/>
</test>
<status status="PASS" start="2025-02-13T13:35:59.573415" elapsed="3.204571"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">Regressão</stat>
</tag>
<suite>
<stat name="LoginScenarios" id="s1" pass="2" fail="0" skip="0">LoginScenarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
